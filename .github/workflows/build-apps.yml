name: Build Android & Windows Apps

on:
  push:
    branches:
      - main # Dispara o workflow em push para a branch main

jobs:
  # Job para criar o executável de Windows
  build-windows:
    runs-on: windows-latest # Usa uma máquina virtual Windows

    steps:
      - name: Checkout do código com LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use uma versão LTS do Node.js

      - name: Instalar dependências do Quasar
        working-directory: ./FrontEnd
        run: npm install

      - name: Instalar dependências do Electron
        working-directory: ./FrontEnd/src-electron
        run: npm install

      - name: Build do executável para Windows
        working-directory: ./FrontEnd
        run: npx quasar build -m electron -T win32 -A x64

      - name: Upload do Artefato (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: TruCar-Windows-x64
          path: ./FrontEnd/dist/electron/Packaged/TruCar-win32-x64

  # Job para criar o app Android
  build-android:
    runs-on: ubuntu-latest # Usa uma máquina virtual Linux

    steps:
      - name: Checkout do código com LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar Java Development Kit (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21' # Requerido pelo Android Studio mais recente

      - name: Instalar dependências do Quasar
        working-directory: ./FrontEnd
        run: npm install

      - name: Build dos assets para Capacitor
        working-directory: ./FrontEnd
        run: npx quasar build -m capacitor -T android # <-- CORRIGIDO AQUI

      - name: Decodificar a Keystore
        working-directory: ./FrontEnd/src-capacitor/android
        run: echo "${{ secrets.KEYSTORE_FILE_B64 }}" | base64 --decode > ./keystore.jks

      - name: Build APK e AAB de Release
        working-directory: ./FrontEnd/src-capacitor/android
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$(pwd)/keystore.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=$(pwd)/keystore.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
            
      - name: Upload dos Artefatos Android (.apk e .aab)
        uses: actions/upload-artifact@v4
        with:
          name: TruCar-Android-Builds
          path: |
            ./FrontEnd/src-capacitor/android/app/build/outputs/apk/release/app-release.apk
            ./FrontEnd/src-capacitor/android/app/build/outputs/bundle/release/app-release.aab

# Job para criar a Release no GitHub
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-android]
    permissions:
      contents: write

    steps:
      - name: Download do Artefato do Windows (.exe)
        uses: actions/download-artifact@v4
        with:
          name: TruCar-Windows-Build
          path: ./release-assets/windows

      - name: Download dos Artefatos do Android (.apk, .aab)
        uses: actions/download-artifact@v4
        with:
          name: TruCar-Android-Builds
          path: ./release-assets/android

      - name: Checkout do código (para zipar)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Criar zip do código-fonte
        run: zip -r source-code.zip . -x ".git/*"

      - name: Criar Release e Anexar Arquivos
        uses: softprops/action-gh-release@v1
        with:
          # Usa a tag do git como nome da release e da tag
          tag_name: ${{ github.ref }}
          name: TruCar ${{ github.ref_name }}
          body: "Release automática gerada pelo GitHub Actions."
          files: |
            ./release-assets/windows/*
            ./release-assets/android/*
            source-code.zip
