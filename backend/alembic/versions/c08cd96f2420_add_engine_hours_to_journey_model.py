"""Add engine hours to Journey model

Revision ID: c08cd96f2420
Revises: 6ab8dd813e90
Create Date: 2025-08-19 15:40:06.607442

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c08cd96f2420'
down_revision: Union[str, None] = '6ab8dd813e90'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_full_name', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_notifications_id', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('ix_organizations_id', table_name='organizations')
    op.drop_index('ix_organizations_name', table_name='organizations')
    op.drop_table('organizations')
    op.drop_index('ix_vehicles_brand', table_name='vehicles')
    op.drop_index('ix_vehicles_id', table_name='vehicles')
    op.drop_index('ix_vehicles_identifier', table_name='vehicles')
    op.drop_index('ix_vehicles_license_plate', table_name='vehicles')
    op.drop_index('ix_vehicles_model', table_name='vehicles')
    op.drop_index('ix_vehicles_organization_id', table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index('ix_fuel_logs_id', table_name='fuel_logs')
    op.drop_table('fuel_logs')
    op.drop_index('ix_journeys_id', table_name='journeys')
    op.drop_table('journeys')
    op.drop_table('maintenance_comments')
    op.drop_index('ix_location_history_id', table_name='location_history')
    op.drop_table('location_history')
    op.drop_index('ix_maintenance_requests_id', table_name='maintenance_requests')
    op.drop_table('maintenance_requests')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('maintenance_requests',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('maintenance_requests_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('problem_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'APPROVED', 'REJECTED', 'IN_PROGRESS', 'COMPLETED', name='maintenancestatus'), autoincrement=False, nullable=False),
    sa.Column('category', postgresql.ENUM('MECHANICAL', 'ELECTRICAL', 'BODYWORK', 'OTHER', name='maintenancecategory'), autoincrement=False, nullable=False),
    sa.Column('reported_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('manager_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('approved_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], name='maintenance_requests_approved_by_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='maintenance_requests_organization_id_fkey'),
    sa.ForeignKeyConstraint(['reported_by_id'], ['users.id'], name='maintenance_requests_reported_by_id_fkey'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name='maintenance_requests_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='maintenance_requests_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_maintenance_requests_id', 'maintenance_requests', ['id'], unique=False)
    op.create_table('location_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='location_history_organization_id_fkey'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name='location_history_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='location_history_pkey')
    )
    op.create_index('ix_location_history_id', 'location_history', ['id'], unique=False)
    op.create_table('maintenance_comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('comment_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('file_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('request_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['request_id'], ['maintenance_requests.id'], name='maintenance_comments_request_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='maintenance_comments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='maintenance_comments_pkey')
    )
    op.create_table('journeys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('start_mileage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_mileage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trip_type', postgresql.ENUM('SPECIFIC_DESTINATION', 'FREE_ROAM', name='journeytype'), autoincrement=False, nullable=False),
    sa.Column('destination_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trip_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start_engine_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('end_engine_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('driver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], name='journeys_driver_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='journeys_organization_id_fkey'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name='journeys_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='journeys_pkey')
    )
    op.create_index('ix_journeys_id', 'journeys', ['id'], unique=False)
    op.create_table('fuel_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('odometer', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('liters', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('total_cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('receipt_photo_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fuel_logs_organization_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fuel_logs_user_id_fkey'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name='fuel_logs_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='fuel_logs_pkey')
    )
    op.create_index('ix_fuel_logs_id', 'fuel_logs', ['id'], unique=False)
    op.create_table('vehicles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('vehicles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('brand', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('license_plate', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('identifier', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('photo_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('AVAILABLE', 'IN_USE', 'MAINTENANCE', name='vehiclestatus'), autoincrement=False, nullable=False),
    sa.Column('current_km', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('current_engine_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('next_maintenance_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('next_maintenance_km', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('maintenance_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='vehicles_organization_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vehicles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_vehicles_organization_id', 'vehicles', ['organization_id'], unique=False)
    op.create_index('ix_vehicles_model', 'vehicles', ['model'], unique=False)
    op.create_index('ix_vehicles_license_plate', 'vehicles', ['license_plate'], unique=True)
    op.create_index('ix_vehicles_identifier', 'vehicles', ['identifier'], unique=False)
    op.create_index('ix_vehicles_id', 'vehicles', ['id'], unique=False)
    op.create_index('ix_vehicles_brand', 'vehicles', ['brand'], unique=False)
    op.create_table('organizations',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('organizations_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('sector', postgresql.ENUM('AGRONEGOCIO', 'CONSTRUCAO_CIVIL', 'SERVICOS', name='sector'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='organizations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_organizations_name', 'organizations', ['name'], unique=False)
    op.create_index('ix_organizations_id', 'organizations', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('related_vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='notifications_organization_id_fkey'),
    sa.ForeignKeyConstraint(['related_vehicle_id'], ['vehicles.id'], name='notifications_related_vehicle_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_index('ix_notifications_id', 'notifications', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('MANAGER', 'DRIVER', name='userrole'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('avatar_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='users_organization_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_full_name', 'users', ['full_name'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    # ### end Alembic commands ###
